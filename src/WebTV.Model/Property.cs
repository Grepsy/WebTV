//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace WebTV.Model
{
    public partial class Property
    {
        #region Primitive Properties
    
        public virtual int PropertyId
        {
            get;
            set;
        }
    
        public virtual int PropertyDescriptorId
        {
            get { return _propertyDescriptorId; }
            set
            {
                if (_propertyDescriptorId != value)
                {
                    if (PropertyDescriptor != null && PropertyDescriptor.PropertyDescriptorId != value)
                    {
                        PropertyDescriptor = null;
                    }
                    _propertyDescriptorId = value;
                }
            }
        }
        private int _propertyDescriptorId;
    
        public virtual int MediaId
        {
            get { return _mediaId; }
            set
            {
                if (_mediaId != value)
                {
                    if (Medium != null && Medium.MediaId != value)
                    {
                        Medium = null;
                    }
                    _mediaId = value;
                }
            }
        }
        private int _mediaId;
    
        public virtual string Value
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Media Medium
        {
            get { return _medium; }
            set
            {
                if (!ReferenceEquals(_medium, value))
                {
                    var previousValue = _medium;
                    _medium = value;
                    FixupMedium(previousValue);
                }
            }
        }
        private Media _medium;
    
        public virtual PropertyDescriptor PropertyDescriptor
        {
            get { return _propertyDescriptor; }
            set
            {
                if (!ReferenceEquals(_propertyDescriptor, value))
                {
                    var previousValue = _propertyDescriptor;
                    _propertyDescriptor = value;
                    FixupPropertyDescriptor(previousValue);
                }
            }
        }
        private PropertyDescriptor _propertyDescriptor;

        #endregion
        #region Association Fixup
    
        private void FixupMedium(Media previousValue)
        {
            if (previousValue != null && previousValue.Properties.Contains(this))
            {
                previousValue.Properties.Remove(this);
            }
    
            if (Medium != null)
            {
                if (!Medium.Properties.Contains(this))
                {
                    Medium.Properties.Add(this);
                }
                if (MediaId != Medium.MediaId)
                {
                    MediaId = Medium.MediaId;
                }
            }
        }
    
        private void FixupPropertyDescriptor(PropertyDescriptor previousValue)
        {
            if (previousValue != null && previousValue.Properties.Contains(this))
            {
                previousValue.Properties.Remove(this);
            }
    
            if (PropertyDescriptor != null)
            {
                if (!PropertyDescriptor.Properties.Contains(this))
                {
                    PropertyDescriptor.Properties.Add(this);
                }
                if (PropertyDescriptorId != PropertyDescriptor.PropertyDescriptorId)
                {
                    PropertyDescriptorId = PropertyDescriptor.PropertyDescriptorId;
                }
            }
        }

        #endregion
    }
}
